<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>FileManager</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }

        header {
            background-color: #333;
            color: white;
            padding: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        h1 {
            margin: 0;
        }

        #current-path {
            font-size: 14px;
        }

        #file-list {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }

        #file-list li {
            padding: 5px 10px;
            cursor: pointer;
            border-bottom: 1px solid #ccc;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        #file-list li:hover {
            background-color: #ccc;
        }

        #file-list li span {
            flex-grow: 1;
        }

        button {
            background-color: #333;
            color: white;
            border: none;
            padding: 3px 6px;
            cursor: pointer;
        }

        button:hover {
            background-color: #555;
        }

        #path-actions {
            width: 100%;
            display: flex;
            flex-direction: row;
            align-items: center;
        }
        #current-path {
            font-size: 28px;
            flex-grow: 1;
            margin-left: 5px;
        }

        #current-path span {
            margin-left: 5px;
            margin-right: 5px;
        }

        #upload-button {
            margin-left: 10px;
            margin-right: 10px;
        }

        #create-folder {
            margin-right: 10px;
        }

        #progressBar {
            width: 100%;
            height: 5px;
        }
    </style>
</head>

<body>
    <header>
        <h1>FileManager</h1>
       
    </header>
     <div id="path-actions">
            <div id="current-path"></div>
            <span>总大小：{{%total%}}，已使用：{{%used%}}</span>
            <button id="upload-button">上传</button>
            <input type="file" id="real-upload-button" style="display: none;"/>
            <button id="create-folder" >创建目录</button>
    </div>
    <div id="progressBarContainer">
        <progress id="progressBar" value="0" max="100" style="display: none;"></progress>
    </div>
    <ul id="file-list"></ul>

    <script>
        const fileSystem = {
            "/": {
                type: "directory",
                contents: []
            }
        };

        
        function getCurrentPath() {
            let currentPath = currentPathArray.join('/');
            if (currentPath.startsWith("//")) {
                currentPath = currentPath.substring(1, currentPath.length);
            }
            return currentPath;
        }

        let currentPathArray = [];

        // document.addEventListener('DOMContentLoaded', function () {
        const fileListDiv = document.getElementById('file-list');
        const currentPathSpan = document.getElementById('current-path');
        const uploadButton = document.getElementById('upload-button');
        const createFolderButton = document.getElementById('create-folder');

        createFolderButton.addEventListener('click', function(e) {
            var userInput = prompt("请输目录名字", "newFolder");
            console.log(userInput);
            let currentPath = currentPathArray.join('/');
            if (currentPath.startsWith("//")) {
                currentPath = currentPath.substring(1, currentPath.length);
            }
            fetch(window.location.href + "createFolder", {
                method: 'POST', headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
                }, body: "dir=" + currentPath + '/' + userInput
            })
            .then(response => response.json())
            .then(data => {
                if (data.code == 1) {
                    // update ui
                    updateUi(currentPath);      
                } else {
                    alert('error code=' + data.code + ",msg=" + data.msg);
                }                    
            })
            .catch(error => alert(error));
        });

        function uploadFile() {
            const fileInput = document.getElementById('real-upload-button');
            const file = fileInput.files[0];

            if (!file) {
                alert('请选择要上传的文件');
                return;
            }

            const formData = new FormData();
            formData.append('file', file);
            // formData.append("dir", getCurrentPath());
            let p = getCurrentPath() + "/";
            if (p === '//') {
                p = '/';
            }
            const url = window.location.href + "upload?dir=" + p;
            const options = {
                method: 'POST',
                body: formData,
                // onprogress: (event) => {
                //     if (event.lengthComputable) {
                //     const progressPercentage = Math.round((event.loaded / event.total) * 100);
                //     console.log(`上传进度: ${progressPercentage}%`);
                //     }
                // },

            };

            var reader = file.stream().getReader();
            var total = file.size;
            var loaded = 0;

            var updateProgress = function () {
                var percentComplete = Math.floor((loaded / total) * 100);
                document.getElementById('progressBar').value = percentComplete;
            };

            var readChunk = function () {
                return reader.read({ value: new ArrayBuffer(1024) }).then(function ({ done, value }) {
                    if (done) {
                        return;
                    }
                    loaded += value.byteLength;
                    console.log('upload progress load=' + loaded + ",total=" + total);
                    updateProgress();
                    return readChunk();
                });
            };

            fetch(url, options)
            .then(data => {
                document.getElementById("progressBar").style = 'display: none';
                updateUi(getCurrentPath());
            })
            .catch(error => { 
                document.getElementById("progressBar").style = 'display: none';
                console.error(error)
            }); 

            // 开始读取文件并更新进度
            readChunk();
        }

        function updateUi(currentPath) {
            getDirectoryContents(currentPath, function(data) {
                if (fileSystem[currentPath] == undefined) {
                    fileSystem[currentPath] = {};
                }
                fileSystem[currentPath].contents = data;
                updateNavigator();
                showFileList(currentPath, data);
            });  
        }

        function showFileList(currentPath, fileList) {
            fileListDiv.innerHTML = '';
            fileList.forEach((item) => {
                const li = document.createElement('li');
                // li.textContent = item.name;
                li.dataset.path = `${item.name}`;
                li.dataset.type = item.type;
                if (item.type == 'dir') {
                    li.style.color = 'blue';
                }
                li.addEventListener('click', function () {
                    const targetPath = this.dataset.path;
                    const type = this.dataset.type;
                    if (type === 'dir') {
                        currentPathArray.push(item.name);
                        updateUi(getCurrentPath());
                    } else {
                        console.log(`点击了文件: ${targetPath}`);
                    }
                });

                const span = document.createElement('span');
                span.innerHTML = item.name;
                li.appendChild(span);

                const deleteButton = document.createElement('button');
                deleteButton.textContent = '删除';
                deleteButton.style.marginRight = "10px";
                deleteButton.addEventListener('click', function (event) {
                    event.stopPropagation();
                    li.remove();
                    console.log(`delete: ${item.name}`);
                    var confirmDelete = confirm("你确定要删除这个文件或目录吗？");
                    if (confirmDelete) {
                        // 如果用户点击了“确定”按钮，执行删除操作
                        fetch(window.location.href + "delete", {
                            method: 'POST', headers: {
                            'Content-Type': 'application/x-www-form-urlencoded'
                            }, body: "path=" + getCurrentPath() + item.name
                        })
                        .then(data => {
                            updateUi(getCurrentPath());
                        })
                        .catch(error => console.error(error))
                    } else {
                        // 如果用户点击了“取消”按钮，取消删除操作
                        console.log("删除操作已取消");
                    }
                    
                });
                li.appendChild(deleteButton);

                const downloadButton = document.createElement('button');
                downloadButton.textContent = '下载';
                downloadButton.addEventListener('click', function(event) {
                    // fetch(window.location.href + "download?path=" + getCurrentPath() + item.name)
                    // .then(data => {
                    //     updateUi(getCurrentPath());
                    // })
                    // .catch(error => console.error(error))
                    window.location.href = window.location.href + "download?path=" + getCurrentPath() + item.name;
                });
                li.appendChild(downloadButton);

                fileListDiv.appendChild(li);
            });
        }

        function updateNavigator() {
            currentPathSpan.innerHTML = '';
            if (currentPathArray.length == 1) {
                    const span = document.createElement('span');
                    span.textContent = '/';
                    span.style.cursor = 'pointer';
                    span.style.color = 'blue'
                    span.addEventListener('click', function () {
                        currentPathArray = currentPathArray.slice(0, 1);
                        displayDirectory();
                    });
                    currentPathSpan.appendChild(span);
            } else {
                for (let i = 0; i < currentPathArray.length; i++) {
                    const pathSegment = currentPathArray[i];
                    const span = document.createElement('span');
                    span.textContent = pathSegment;
                    span.style.cursor = 'pointer';
                    span.style.color = 'blue'
                    span.addEventListener('click', function () {
                        currentPathArray = currentPathArray.slice(0, i + 1);
                        displayDirectory();
                    });
                    currentPathSpan.appendChild(span);
                    
                    if (i > 0 && i < currentPathArray.length - 1) {
                        const spanSegment = document.createElement('span');
                        spanSegment.textContent = '/';
                        // spanSegment.style.cursor = 'pointer';
                        currentPathSpan.appendChild(spanSegment);                            
                    }

                }
            }
        }

        function displayDirectory() {
            
            updateNavigator();
            // currentPathSpan.innerHTML = currentPathDisplay;

            let currentPath = getCurrentPath();
            const directory = fileSystem[currentPath];
            if (directory && directory.contents.length > 0) {
                showFileList(currentPath, directory.contents);
            } else {
                updateUi(currentPath);                 
            }
        }

        currentPathArray.push('/');
        displayDirectory();

        function getDirectoryContents(path, callback) {
            fetch(window.location.href + 'list?dir=' + path)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => callback(data))
            .catch(error => console.error('There was a problem with the fetch operation:', error));
        }

        uploadButton.addEventListener('click', function () {
            // uploadFile();
            document.getElementById('real-upload-button').onchange = function () {
                uploadFile();
                document.getElementById("progressBar").style = 'display: block';
            };
            document.getElementById('real-upload-button').click();
        });
        // });
    </script>
</body>

</html>